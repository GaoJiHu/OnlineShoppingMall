package com.whalesj.sso.service.Impl;

import java.util.List;
import java.util.UUID;

import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;

import org.apache.commons.lang3.StringUtils;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.beans.factory.annotation.Value;
import org.springframework.stereotype.Service;
import org.springframework.util.DigestUtils;

import com.whalesj.common.pojo.TaotaoResult;
import com.whalesj.common.utils.CookieUtils;
import com.whalesj.common.utils.JsonUtils;
import com.whalesj.mapper.TbUserMapper;
import com.whalesj.pojo.TbUser;
import com.whalesj.pojo.TbUserExample;
import com.whalesj.pojo.TbUserExample.Criteria;
import com.whalesj.sso.component.JedisClient;
import com.whalesj.sso.service.LoginService;


/**
 * 用户登陆服务
 * @author wushijia
 *
 */
@Service
public class LoginServiceImpl implements LoginService {
	
	@Autowired
	private TbUserMapper userMapper;
	
	@Autowired
	private JedisClient jedisClient;
	
	@Value("${REDIS_SESSION_KEY}")
	private String REDIS_SESSION_KEY;
	@Value("${SESSION_EXPIRE}")
	private Integer SESSION_EXPIRE;//Session的过期时间

	@Override
	public TaotaoResult login(String username, String password, HttpServletRequest request,
			HttpServletResponse response) {
		//校验用户名和密码
		TbUserExample example = new TbUserExample();
		Criteria criteria = example.createCriteria();
		criteria.andUsernameEqualTo(username);
		List<TbUser> list = userMapper.selectByExample(example);
		//取出用户信息
		if(list == null || list.isEmpty()){
			return TaotaoResult.build(400, "用户名或密码错误");
		}
		TbUser user = list.get(0);
		//校验密码 比较二者的hash值
		if(!user.getPassword().equals(DigestUtils.md5DigestAsHex(password.getBytes()))){
			//密码错误
			return TaotaoResult.build(400, "用户名或密码错误");
		}
		//登陆成功
		//生成token
		String token = UUID.randomUUID().toString();
		//将用户信息写入redis
		//key：REDIS_SESSION:{token}
		//value：Tbuser对象转换为json
		user.setPassword(null);//转化之前将密码清空
		jedisClient.set(REDIS_SESSION_KEY+":"+token, JsonUtils.objectToJson(user));//存入redis
		//设置过期时间
		jedisClient.expire(REDIS_SESSION_KEY+":"+token, SESSION_EXPIRE);//设置redis缓存中的过期时间
		//写入cookie
		CookieUtils.setCookie(request, response, "TOKEN", token);//关闭浏览器之后，cookie失效
		
		return TaotaoResult.ok(token);
	}

	@Override
	public TaotaoResult getUserByToken(String token) {
		//根据token到redis查询用户信息
		String json = jedisClient.get(REDIS_SESSION_KEY+":"+token);
		if(StringUtils.isBlank(json)){//判断查询的结果
			return TaotaoResult.build(400, "Session已经过期");
		}
		return null;
	}

}
